# Пример конфигурации Nginx для мини-апп
# Этот файл НЕ используется внутри контейнера мини-апп!
# Это конфиг для ВАШЕГО существующего Nginx на VPS

# ============================================
# ВАРИАНТ 1: Простой (минимальный)
# ============================================

upstream miniapp_backend {
    server remnawave-miniapp:3000;
}

server {
    listen 443 ssl http2;
    server_name miniapp.yourdomain.com;

    # SSL сертификаты
    ssl_certificate /etc/letsencrypt/live/miniapp.yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/miniapp.yourdomain.com/privkey.pem;

    # Проксирование на мини-апп
    location / {
        proxy_pass http://miniapp_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # ВАЖНО! SPA routing
        try_files $uri $uri/ /index.html;
    }
}

# ============================================
# ВАРИАНТ 2: С кешированием и оптимизацией
# ============================================

upstream miniapp_backend {
    server remnawave-miniapp:3000;
    keepalive 32;
}

# Кеш для статики
proxy_cache_path /var/cache/nginx/miniapp levels=1:2 keys_zone=miniapp_cache:10m max_size=100m inactive=60m;

server {
    listen 80;
    server_name miniapp.yourdomain.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name miniapp.yourdomain.com;

    # SSL
    ssl_certificate /etc/letsencrypt/live/miniapp.yourdomain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/miniapp.yourdomain.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers off;

    # Логи
    access_log /var/log/nginx/miniapp-access.log;
    error_log /var/log/nginx/miniapp-error.log warn;

    # Gzip сжатие
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/x-javascript application/xml+rss 
               application/javascript application/json image/svg+xml;
    gzip_disable "msie6";

    # Brotli (если установлен модуль)
    # brotli on;
    # brotli_types text/plain text/css application/json application/javascript;

    # Основная локация - HTML и JS
    location / {
        proxy_pass http://miniapp_backend;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Connection "";
        
        # КРИТИЧНО ДЛЯ SPA!
        # Если файл не найден - возвращаем index.html
        # React Router обработает маршрут на клиенте
        try_files $uri $uri/ /index.html;
        
        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # Статические файлы с агрессивным кешированием
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://miniapp_backend;
        
        # Кеширование
        proxy_cache miniapp_cache;
        proxy_cache_valid 200 1y;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # Заголовки кеширования для браузера
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status $upstream_cache_status;
        
        access_log off;
    }

    # Безопасность
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Content Security Policy (настройте под ваши нужды)
    # add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' https://telegram.org; style-src 'self' 'unsafe-inline';" always;
    
    server_tokens off;
}

# ============================================
# ВАРИАНТ 3: Если мини-апп на поддомене основного бота
# ============================================

# Пример: бот на bot.yourdomain.com, мини-апп на app.yourdomain.com
# Или: бот на yourdomain.com, мини-апп на yourdomain.com/app

server {
    listen 443 ssl http2;
    server_name yourdomain.com;

    ssl_certificate /path/to/cert;
    ssl_certificate_key /path/to/key;

    # Основной сайт/бот
    location / {
        # ваша существующая конфигурация
    }

    # Мини-апп на /app
    location /app {
        # Убираем /app из пути при проксировании
        rewrite ^/app(/.*)$ $1 break;
        
        proxy_pass http://remnawave-miniapp:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        
        # SPA routing
        try_files $uri $uri/ /app/index.html;
    }
}

