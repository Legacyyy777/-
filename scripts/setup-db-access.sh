#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –ë–î –¥–ª—è MiniApp

set -e

echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ MiniApp –∫ –ë–î –±–æ—Ç–∞..."
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∑–∞–ø—É—â–µ–Ω PostgreSQL
if ! docker ps | grep -q remnawave_bot_db; then
    echo -e "${RED}‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä PostgreSQL –Ω–µ –∑–∞–ø—É—â–µ–Ω!${NC}"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞ –±–æ—Ç–∞: docker-compose up -d"
    exit 1
fi

echo -e "${GREEN}‚úÖ PostgreSQL –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–∞–π–¥–µ–Ω${NC}"
echo ""

# –ó–∞–ø—Ä–æ—Å –ø–∞—Ä–æ–ª—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
read -sp "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è miniapp_readonly (–∏–ª–∏ Enter –¥–ª—è –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏–∏): " DB_PASSWORD
echo ""

if [ -z "$DB_PASSWORD" ]; then
    DB_PASSWORD=$(openssl rand -base64 24 | tr -d "=+/" | cut -c1-20)
    echo -e "${YELLOW}–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –ø–∞—Ä–æ–ª—å: ${DB_PASSWORD}${NC}"
fi

echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ read-only –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ PostgreSQL..."

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ docker exec
docker exec -i remnawave_bot_db psql -U remnawave_user -d remnawave_bot << EOF
-- –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
DO \$\$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_user WHERE usename = 'miniapp_readonly') THEN
        CREATE USER miniapp_readonly WITH PASSWORD '$DB_PASSWORD';
        RAISE NOTICE '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å miniapp_readonly —Å–æ–∑–¥–∞–Ω';
    ELSE
        ALTER USER miniapp_readonly WITH PASSWORD '$DB_PASSWORD';
        RAISE NOTICE '–ü–∞—Ä–æ–ª—å –¥–ª—è miniapp_readonly –æ–±–Ω–æ–≤–ª—ë–Ω';
    END IF;
END
\$\$;

-- –ü—Ä–∞–≤–∞ –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
GRANT CONNECT ON DATABASE remnawave_bot TO miniapp_readonly;
GRANT USAGE ON SCHEMA public TO miniapp_readonly;

-- –ü—Ä–∞–≤–∞ –Ω–∞ —á—Ç–µ–Ω–∏–µ
GRANT SELECT ON ALL TABLES IN SCHEMA public TO miniapp_readonly;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT ON TABLES TO miniapp_readonly;
GRANT SELECT, USAGE ON ALL SEQUENCES IN SCHEMA public TO miniapp_readonly;

-- –£–±–∏—Ä–∞–µ–º –ø—Ä–∞–≤–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
REVOKE INSERT, UPDATE, DELETE, TRUNCATE ON ALL TABLES IN SCHEMA public FROM miniapp_readonly;

SELECT '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω —É—Å–ø–µ—à–Ω–æ!' as status;
EOF

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ${NC}"
else
    echo -e "${RED}‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è${NC}"
    exit 1
fi

echo ""
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –¥–ª—è backend..."

# –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ .env –±–æ—Ç–∞
if [ -f "../.env" ]; then
    source ../.env
elif [ -f ".env" ]; then
    source .env
fi

# –°–æ–∑–¥–∞—ë–º .env –¥–ª—è backend
cat > backend/.env << EOF
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=remnawave_bot
POSTGRES_USER=miniapp_readonly
POSTGRES_PASSWORD=$DB_PASSWORD

# –ü–æ—Ä—Ç API
PORT=3001

# CORS (—Ä–∞–∑—Ä–µ—à—ë–Ω–Ω—ã–µ –¥–æ–º–µ–Ω—ã)
ALLOWED_ORIGINS=http://localhost:3000,https://testminiapp.legacyyy777.site

# Telegram Bot Token (–¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ initData)
BOT_TOKEN=${BOT_TOKEN:-your_bot_token_here}

# –†–µ–∂–∏–º
NODE_ENV=production
EOF

echo -e "${GREEN}‚úÖ –§–∞–π–ª backend/.env —Å–æ–∑–¥–∞–Ω${NC}"
echo ""

echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."

# –¢–µ—Å—Ç–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
docker run --rm --network bot_network postgres:15-alpine \
    psql "postgresql://miniapp_readonly:$DB_PASSWORD@postgres:5432/remnawave_bot" \
    -c "SELECT COUNT(*) as total_users FROM users;" 2>/dev/null

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!${NC}"
else
    echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–≤–æ–∑–º–æ–∂–Ω–æ —Ç–∞–±–ª–∏—Ü–∞ users –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)${NC}"
fi

echo ""
echo -e "${GREEN}üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
echo ""
echo "–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ backend/.env"
echo "2. –ê–¥–∞–ø—Ç–∏—Ä—É–π—Ç–µ SQL –∑–∞–ø—Ä–æ—Å—ã –ø–æ–¥ –≤–∞—à—É —Å—Ö–µ–º—É –ë–î –≤ backend/src/routes/"
echo "3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ backend: cd backend && npm install && npm run dev"
echo "4. –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —á–µ—Ä–µ–∑ Docker: docker-compose -f docker-compose.db-access.yml up -d"
echo ""
echo "–ü–∞—Ä–æ–ª—å –ë–î —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤: backend/.env"
echo -e "${YELLOW}‚ö†Ô∏è  –ù–µ –∫–æ–º–º–∏—Ç—å—Ç–µ .env —Ñ–∞–π–ª –≤ git!${NC}"

