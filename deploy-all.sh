#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è MiniApp
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: bash deploy-all.sh [backend|frontend|all]

set -e

MODE=${1:-all}

echo "üöÄ –î–µ–ø–ª–æ–π MiniApp - —Ä–µ–∂–∏–º: $MODE"
echo ""

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")"
ROOT_DIR=$(pwd)

# –§—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è backend
deploy_backend() {
    echo "üì¶ –î–µ–ø–ª–æ–π Backend..."
    cd "$ROOT_DIR/backend"
    bash deploy.sh
    echo "‚úÖ Backend –∑–∞–¥–µ–ø–ª–æ–µ–Ω!"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è frontend
deploy_frontend() {
    echo "üé® –î–µ–ø–ª–æ–π Frontend..."
    cd "$ROOT_DIR/docker"
    
    echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    docker compose down
    
    echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫..."
    docker compose up -d --build
    
    echo "‚è≥ –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞..."
    sleep 5
    
    echo "‚úÖ Frontend –∑–∞–¥–µ–ø–ª–æ–µ–Ω!"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
case $MODE in
    backend)
        deploy_backend
        ;;
    frontend)
        deploy_frontend
        ;;
    all)
        deploy_backend
        deploy_frontend
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: $MODE"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: bash deploy-all.sh [backend|frontend|all]"
        exit 1
        ;;
esac

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep -E "NAMES|remnawave"

echo ""
echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"
echo ""
echo "üîó –°—Å—ã–ª–∫–∏:"
echo "   MiniApp: https://testminiapp.legacyyy777.site"
echo "   Backend Health: http://localhost:3003/health"
echo ""
echo "üìã –õ–æ–≥–∏:"
echo "   Backend:  docker logs remnawave_miniapp_backend --tail 20"
echo "   Frontend: docker logs remnawave-miniapp --tail 20"

