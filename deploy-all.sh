#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è MiniApp
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: bash deploy-all.sh [backend|frontend|all]

set -e

MODE=${1:-all}

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")"
ROOT_DIR=$(pwd)

# –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
CONFIG_FILE="$ROOT_DIR/.deploy.config"
if [ ! -f "$CONFIG_FILE" ]; then
    echo "‚ùå –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω: $CONFIG_FILE"
    echo "üìù –°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª .deploy.config –Ω–∞ –æ—Å–Ω–æ–≤–µ .deploy.config.example"
    exit 1
fi

source "$CONFIG_FILE"

echo "üöÄ –î–µ–ø–ª–æ–π MiniApp - —Ä–µ–∂–∏–º: $MODE"
echo "üìÇ –ü—Ä–æ–µ–∫—Ç: $ROOT_DIR"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è backend
deploy_backend() {
    echo "üì¶ –î–µ–ø–ª–æ–π Backend..."
    
    BACKEND_PATH="$ROOT_DIR/$BACKEND_DIR"
    if [ ! -d "$BACKEND_PATH" ]; then
        echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è backend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $BACKEND_PATH"
        exit 1
    fi
    
    cd "$BACKEND_PATH"
    
    if [ -f "deploy.sh" ]; then
        bash deploy.sh
    elif [ -f "$BACKEND_COMPOSE_FILE" ]; then
        docker compose -f "$BACKEND_COMPOSE_FILE" down
        docker compose -f "$BACKEND_COMPOSE_FILE" up -d --build
    else
        echo "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ deploy.sh, –Ω–∏ $BACKEND_COMPOSE_FILE"
        exit 1
    fi
    
    echo "‚úÖ Backend –∑–∞–¥–µ–ø–ª–æ–µ–Ω!"
    echo ""
}

# –§—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è frontend
deploy_frontend() {
    echo "üé® –î–µ–ø–ª–æ–π Frontend..."
    
    FRONTEND_PATH="$ROOT_DIR/$FRONTEND_DIR"
    if [ ! -d "$FRONTEND_PATH" ]; then
        echo "‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $FRONTEND_PATH"
        exit 1
    fi
    
    cd "$FRONTEND_PATH"
    
    if [ ! -f "$FRONTEND_COMPOSE_FILE" ]; then
        echo "‚ùå Docker Compose —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $FRONTEND_COMPOSE_FILE"
        exit 1
    fi
    
    echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä..."
    docker compose -f "$FRONTEND_COMPOSE_FILE" down
    
    echo "üî® –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫..."
    docker compose -f "$FRONTEND_COMPOSE_FILE" up -d --build
    
    echo "‚è≥ –ñ–¥—ë–º –∑–∞–ø—É—Å–∫–∞..."
    sleep 5
    
    echo "‚úÖ Frontend –∑–∞–¥–µ–ø–ª–æ–µ–Ω!"
    echo ""
}

# –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å
case $MODE in
    backend)
        deploy_backend
        ;;
    frontend)
        deploy_frontend
        ;;
    all)
        deploy_backend
        deploy_frontend
        ;;
    *)
        echo "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ä–µ–∂–∏–º: $MODE"
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: bash deploy-all.sh [backend|frontend|all]"
        exit 1
        ;;
esac

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
if [ -n "$DOCKER_NETWORK_PREFIX" ]; then
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep -E "NAMES|$DOCKER_NETWORK_PREFIX" || echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
else
    docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
fi

echo ""
echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω!"
echo ""
echo "üîó –°—Å—ã–ª–∫–∏:"
[ -n "$MINIAPP_URL" ] && echo "   MiniApp: $MINIAPP_URL"
[ -n "$BACKEND_HEALTH_URL" ] && echo "   Backend Health: $BACKEND_HEALTH_URL"
echo ""
echo "üìã –õ–æ–≥–∏:"
[ -n "$BACKEND_CONTAINER_NAME" ] && echo "   Backend:  docker logs $BACKEND_CONTAINER_NAME --tail 20"
[ -n "$FRONTEND_CONTAINER_NAME" ] && echo "   Frontend: docker logs $FRONTEND_CONTAINER_NAME --tail 20"

